# Generated by Django 4.0.2 on 2022-02-07 09:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dolznost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Название')),
                ('rukovodiachia_dolnost', models.BooleanField(default=False, verbose_name='Руководящая должность')),
            ],
            options={
                'verbose_name': 'Должности',
                'verbose_name_plural': 'Должности',
            },
        ),
        migrations.CreateModel(
            name='Klient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='Контактный телефон')),
                ('phone_dopolnitelnie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Дополнительные телефоны')),
                ('email', models.CharField(blank=True, max_length=255, null=True, verbose_name='Email')),
            ],
            options={
                'verbose_name': 'Клиенты',
                'verbose_name_plural': 'Клиент',
            },
        ),
        migrations.CreateModel(
            name='Otdel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Отделы',
                'verbose_name_plural': 'Отделы',
            },
        ),
        migrations.CreateModel(
            name='RodDeiatelnosti',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Род деятельности',
                'verbose_name_plural': 'Род деятельности',
            },
        ),
        migrations.CreateModel(
            name='SemeinoePolozenie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Семейные положения',
                'verbose_name_plural': 'Семейные положения',
            },
        ),
        migrations.CreateModel(
            name='TipDocumentov',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Типы документов',
                'verbose_name_plural': 'Типы документов',
            },
        ),
        migrations.CreateModel(
            name='TipDvizeniePoShetu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Название')),
                ('spisanie_ili_popolnenenie', models.CharField(choices=[('-', 'Списание'), ('+', 'Пополнение')], max_length=1, verbose_name='Списание или пополнение')),
            ],
            options={
                'verbose_name': 'Типы движения по счетам',
                'verbose_name_plural': 'Типы движения по счетам',
            },
        ),
        migrations.CreateModel(
            name='TipIzmeneniaIstorii',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Типы изменения клиентов',
                'verbose_name_plural': 'Типы изменения клиентов',
            },
        ),
        migrations.CreateModel(
            name='TipLiza',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Типы юр/физ лица',
                'verbose_name_plural': 'Типы юр/физ лица',
            },
        ),
        migrations.CreateModel(
            name='TipPlateznoiSistemi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Типы платёжной системы',
                'verbose_name_plural': 'Типы платёжной системы',
            },
        ),
        migrations.CreateModel(
            name='TipSheta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazvanie', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Типы счетов',
                'verbose_name_plural': 'Типы счетов',
            },
        ),
        migrations.CreateModel(
            name='Sotrudnic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fio', models.CharField(db_index=True, max_length=255, verbose_name='ФИО')),
                ('dolznost', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bank.dolznost', verbose_name='Должность')),
                ('otdel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bank.otdel', verbose_name='Отдел')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Сотрудники',
                'verbose_name_plural': 'Сотрудники',
            },
        ),
        migrations.CreateModel(
            name='Shet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomer_sheta', models.CharField(blank=True, db_index=True, max_length=255, null=True, unique=True, verbose_name='Номер счёта')),
                ('data_otkritia', models.DateField(verbose_name='Дата открытия')),
                ('data_zakritia', models.DateField(blank=True, null=True, verbose_name='Дата закрытия')),
                ('balans_seishas', models.FloatField(default=0, verbose_name='Баланс сейчас')),
                ('skan_dogovora', models.FileField(blank=True, null=True, upload_to='', verbose_name='Скан договора об открытие счета')),
                ('klient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bank.klient', verbose_name='Клиент владелец счёта')),
                ('tip_sheta', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bank.tipsheta', verbose_name='Тип счёта')),
            ],
            options={
                'verbose_name': 'Счета',
                'verbose_name_plural': 'Счета',
            },
        ),
        migrations.CreateModel(
            name='LichnieDocumentKlienta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_vidachi', models.DateField(blank=True, null=True, verbose_name='Дата выдачи')),
                ('nomer_dokumenta', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='Номер документа')),
                ('organ_vidavshii', models.CharField(blank=True, max_length=255, null=True, verbose_name='Орган выдавший')),
                ('klient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bank.klient', verbose_name='Клиент')),
                ('tip_documentov', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bank.tipdocumentov', verbose_name='Тип документов')),
            ],
            options={
                'verbose_name': 'Личные документы клиентов',
                'verbose_name_plural': 'Личные документы клиентов',
            },
        ),
        migrations.CreateModel(
            name='Kredit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summa_kredita', models.FloatField(db_index=True, verbose_name='Сумма кредита')),
                ('srok_v_mesiazah', models.IntegerField(db_index=True, verbose_name='Срок кредита в месяцах')),
                ('stavka', models.FloatField(db_index=True, verbose_name='Процентная ставка')),
                ('data_vidachi_kredita', models.DateField(db_index=True, verbose_name='Дата выдачи кредита')),
                ('klient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bank.klient', verbose_name='Клиент')),
                ('rs_dlia_rasheta', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bank.shet', verbose_name='Расчетный счет')),
                ('sotrudnoc_vidavchi_kredit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bank.sotrudnic', verbose_name='Сотрудник который выдал ккредит')),
            ],
            options={
                'verbose_name': 'Кредитования',
                'verbose_name_plural': 'Кредитования',
            },
        ),
        migrations.CreateModel(
            name='KlientUrlizo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('naimenovanie', models.CharField(db_index=True, max_length=255, verbose_name='Наименование')),
                ('inn', models.CharField(db_index=True, max_length=255, verbose_name='ИНН')),
                ('klient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='bank.klient', verbose_name='Клиент')),
                ('tip_liza', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bank.tipliza', verbose_name='Тип юр лица')),
            ],
            options={
                'verbose_name': 'Клиенты юр лица',
                'verbose_name_plural': 'Клиенты юр лица',
            },
        ),
        migrations.CreateModel(
            name='KlientFizlizo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fio', models.CharField(db_index=True, max_length=255, verbose_name='ФИО')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Фото')),
                ('data_rozdenia', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('kolichestvo_detei', models.IntegerField(blank=True, null=True, verbose_name='Количество детей')),
                ('klient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='bank.klient', verbose_name='Клиент')),
                ('semeinoe_polozenie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bank.semeinoepolozenie', verbose_name='Семейное положение')),
            ],
            options={
                'verbose_name': 'Клиенты физ лица',
                'verbose_name_plural': 'Клиенты физ лица',
            },
        ),
        migrations.AddField(
            model_name='klient',
            name='lichni_menedger',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bank.sotrudnic', verbose_name='Личный менеджер банка'),
        ),
        migrations.AddField(
            model_name='klient',
            name='rod_deiatelnosti',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bank.roddeiatelnosti', verbose_name='Род деятельности'),
        ),
        migrations.CreateModel(
            name='Kartochka',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomer', models.CharField(max_length=255, unique=True, verbose_name='Номер карты')),
                ('shet', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bank.shet', verbose_name='Счёт')),
                ('tip_plateznoi_sistemi', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bank.tipplateznoisistemi', verbose_name='Тип платежной системы')),
            ],
            options={
                'verbose_name': 'Карточки',
                'verbose_name_plural': 'Карточки',
            },
        ),
        migrations.CreateModel(
            name='IstoriaIzmeneniaKlienta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('danie_bili', models.JSONField(blank=True, null=True, verbose_name='Данные были')),
                ('danie_stali', models.JSONField(blank=True, null=True, verbose_name='Данные были')),
                ('data', models.DateField(blank=True, null=True, verbose_name='Дата изменения')),
                ('klient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bank.klient', verbose_name='Клиент у которого поменяли данные')),
                ('sotrudnic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='bank.sotrudnic', verbose_name='Сотрудник который внёс изменение')),
                ('tip_izmenenia_istorii', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bank.tipizmeneniaistorii', verbose_name='Тип изменения')),
            ],
            options={
                'verbose_name': 'Истории изменений',
                'verbose_name_plural': 'Истории изменений',
            },
        ),
        migrations.CreateModel(
            name='GraficViplatiKredita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_planovogo_plateza', models.DateField(verbose_name='Дата планового платежа')),
                ('summa_k_viplate', models.FloatField(verbose_name='Сумма к выплате за период')),
                ('ostatok_k_viplate_nachalo', models.FloatField(verbose_name='Остаток по кредиту на начало периода')),
                ('kredit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bank.klient', verbose_name='Кредит')),
            ],
            options={
                'verbose_name': 'Графики выплат кредитов',
                'verbose_name_plural': 'Графики выплат кредитов',
            },
        ),
        migrations.CreateModel(
            name='DvizeniePoShetu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summa', models.FloatField(db_index=True, default=0, verbose_name='Сумма')),
                ('data', models.DateTimeField(verbose_name='Дата и время операция')),
                ('fiz_adres_operazii', models.JSONField(blank=True, null=True, verbose_name='Координаты где была совершенна операция')),
                ('naznachenie_plateza', models.TextField(blank=True, null=True, verbose_name='Назначение платежа')),
                ('naimenovanie_prodovza', models.CharField(blank=True, max_length=255, null=True, verbose_name='Наименование продовца')),
                ('inn_podavza', models.CharField(blank=True, max_length=255, null=True, verbose_name='ИНН продавца')),
                ('rs_prodavza', models.CharField(blank=True, max_length=255, null=True, verbose_name='РС продавца')),
                ('bik_prodavza', models.CharField(blank=True, max_length=255, null=True, verbose_name='БИК продавца')),
                ('shet', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bank.shet', verbose_name='Счёт')),
                ('tip_dvizenie_po_shetu', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bank.tipdvizenieposhetu', verbose_name='Тип операции')),
            ],
            options={
                'verbose_name': 'Движения по счётам',
                'verbose_name_plural': 'Движения по счётам',
            },
        ),
    ]
